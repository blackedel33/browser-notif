{"version":3,"sources":["BrowserNotif.js"],"names":["global","factory","define","amd","exports","mod","BrowserNotif","this","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","protoProps","staticProps","options","notifOptions","timeout","Permission","Default","Granted","Denied","_setOptions","isSupported","console","warn","option","indexOf","title","body","callback","_this","Notification","permission","_notify","requestPermission","alert","notification","_closeNotification","setTimeout","close","bind","_this2","onclick","_this3","onerror","window","_this4","default"],"mappings":"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","file":"BrowserNotif.min.js","sourcesContent":["(function (global, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(['exports'], factory);\n    } else if (typeof exports !== \"undefined\") {\n        factory(exports);\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod.exports);\n        global.BrowserNotif = mod.exports;\n    }\n})(this, function (exports) {\n    /**\n    *  BrowserNotif.JS\n    *  (c) 2016 Ipan Ardian\n    *\n    *  Lets a web page send notifications that are displayed outside the page at the system level.\n    *  This lets web apps send information to a user even if the application is idle, in the background, switched tabs or moved to a different app.\n    *  For details, see the web site: https://github.com/ipanardian/browser-notif\n    *  The MIT License\n    */\n    /// <reference path='Notification.d.ts' />\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    var _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n            var source = arguments[i];\n\n            for (var key in source) {\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n\n        return target;\n    };\n\n    function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n        }\n    }\n\n    var _createClass = function () {\n        function defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n                var descriptor = props[i];\n                descriptor.enumerable = descriptor.enumerable || false;\n                descriptor.configurable = true;\n                if (\"value\" in descriptor) descriptor.writable = true;\n                Object.defineProperty(target, descriptor.key, descriptor);\n            }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n            if (protoProps) defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) defineProperties(Constructor, staticProps);\n            return Constructor;\n        };\n    }();\n\n    var BrowserNotif = function () {\n        /**\n         * BrowserNotif constructor\n         * @param  {BrowserNotifOptions} options Optional config in object literal form\n         * e.g {icon: 'image.png', timeout: 10}\n         */\n        function BrowserNotif(options) {\n            _classCallCheck(this, BrowserNotif);\n\n            /**\n             * BrowserNotif configuration\n             * @type {BrowserNotifOptions}\n             */\n            this.options = {};\n            /**\n             * Notification Options\n             * @type {NotificationOptions}\n             */\n            this.notifOptions = {};\n            /**\n             * How long notification will appear in second. Set to 0 to make always visible\n             * @type {number}\n             */\n            this.timeout = 0;\n            /**\n             * Permission Type\n             * @type {PermissionInterface}\n             */\n            this.Permission = {\n                Default: 'default',\n                Granted: 'granted',\n                Denied: 'denied'\n            };\n            if (options) {\n                _extends(this.options, options);\n            }\n            this._setOptions(this.options);\n            if (options.timeout) {\n                this.timeout = options.timeout;\n            }\n            if (!BrowserNotif.isSupported()) {\n                console.warn('This browser does not support system notifications');\n            }\n            // Navigator.serviceWorker.register('sw.js')\n        }\n        /**\n         * Check is browser support for system notification\n         * @return {boolean}\n         */\n\n\n        _createClass(BrowserNotif, [{\n            key: '_setOptions',\n            value: function _setOptions(options) {\n                for (var option in options) {\n                    if (['timeout'].indexOf(option) == -1) {\n                        this.notifOptions[option] = options[option];\n                    }\n                }\n            }\n        }, {\n            key: 'notify',\n            value: function notify(title, body, callback) {\n                var _this = this;\n\n                if (!BrowserNotif.isSupported()) {\n                    alert(title + '\\n\\n' + body);\n                    return this;\n                }\n                this.title = title;\n                this.notifOptions.body = body;\n                if (this.Permission.Granted === Notification.permission) {\n                    this._notify(callback);\n                } else if (this.Permission.Denied !== Notification.permission) {\n                    BrowserNotif.requestPermission(function (permission) {\n                        if (_this.Permission.Granted === permission) {\n                            _this._notify(callback);\n                        }\n                    });\n                } else {\n                    console.warn('User denied the notification permission');\n                }\n                return this;\n            }\n        }, {\n            key: '_notify',\n            value: function _notify(callback) {\n                this.notification = new Notification(this.title, this.notifOptions);\n                this._closeNotification();\n                if (typeof callback === 'function') {\n                    callback.call(this, this.notification);\n                }\n            }\n        }, {\n            key: '_closeNotification',\n            value: function _closeNotification() {\n                if (this.timeout > 0 && this.notification instanceof Notification) {\n                    setTimeout(this.notification.close.bind(this.notification), this.timeout * 1e3);\n                }\n            }\n        }, {\n            key: 'click',\n            value: function click(callback) {\n                var _this2 = this;\n\n                if (typeof callback === 'function' && this.notification instanceof Notification) {\n                    this.notification.onclick = function () {\n                        callback.call(_this2);\n                    };\n                }\n                return this;\n            }\n        }, {\n            key: 'close',\n            value: function close() {\n                if (this.notification instanceof Notification) {\n                    this.notification.close();\n                }\n            }\n        }, {\n            key: 'error',\n            value: function error(callback) {\n                var _this3 = this;\n\n                if (typeof callback === 'function' && this.notification instanceof Notification) {\n                    this.notification.onerror = function () {\n                        callback.call(_this3);\n                    };\n                }\n                return this;\n            }\n        }], [{\n            key: 'isSupported',\n            value: function isSupported() {\n                if (!(\"Notification\" in window)) {\n                    return false;\n                }\n                return true;\n            }\n        }, {\n            key: 'requestPermission',\n            value: function requestPermission(callback) {\n                var _this4 = this;\n\n                Notification.requestPermission(function (permission) {\n                    if (typeof callback === 'function') {\n                        callback.call(_this4, permission);\n                    }\n                });\n            }\n        }]);\n\n        return BrowserNotif;\n    }();\n\n    exports.default = BrowserNotif;\n});"]}